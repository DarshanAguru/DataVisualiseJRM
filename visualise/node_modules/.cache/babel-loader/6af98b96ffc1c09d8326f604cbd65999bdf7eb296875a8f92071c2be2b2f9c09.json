{"ast":null,"code":"var _jsxFileName = \"E:\\\\MJR\\\\visualise\\\\src\\\\CvsPonEY.js\",\n  _s = $RefreshSig$();\nimport './Dashboard.css';\nimport { useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = \"http://localhost:9000/api/data\";\nexport default function CvsPonEY() {\n  _s();\n  const [countryList, setCountryList] = useState([]);\n  const [country, setCountry] = useState('Australia');\n  const handlechange = selcountry => {\n    setCountry(selcountry.value);\n  };\n  useMemo(() => {\n    fetch(baseurl + '/countrynames').then(response => response.json()).then(json => {\n      var data = [];\n      for (let i = 0; i < json.length; i++) {\n        data.push({\n          id: i,\n          value: json[i],\n          label: json[i]\n        });\n      }\n      setCountryList(data);\n\n      // console.log(countryList);\n    }).catch(error => {\n      console.log(\"err\");\n    });\n  }, []);\n  const [chartdata, setChartData] = useState(null);\n  useEffect(() => {\n    fetch(`${baseurl}/country/${country}`).then(response => response.json()).then(json => {\n      let labels = [];\n      let data = new Map();\n      for (let i = 0; i < json.length; i++) {\n        if (data.has(json[i].endYear)) {\n          let cnt = data.get(json[i].endYear) + 1;\n          data.set(json[i].endYear, cnt);\n        }\n        data.set(json[i].endYear, cmt);\n      }\n      console.log(json);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n\n  // const chartdata = {\n  //     labels: ['Red', 'Orange', 'Blue'],\n  //     datasets: [\n  //         {\n  //           label: 'Popularity of colours',\n  //           data: [55, 23, 96],\n  //           backgroundColor: [\n  //             '#ff00ff',\n  //             '#ff0000',\n  //             '#0000ff'\n  //             ],\n  //             borderWidth: 1,\n  //                 }\n  //             ]\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart1\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"filter\",\n      children: \"Country : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this), \" \", countryList && /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-box\",\n      value: country,\n      onChange: handlechange,\n      children: countryList.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 176\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 75\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(CvsPonEY, \"AvaNYnDr0z5bzRP04GZs2yysIy4=\");\n_c = CvsPonEY;\nvar _c;\n$RefreshReg$(_c, \"CvsPonEY\");","map":{"version":3,"names":["useState","useMemo","useEffect","jsxDEV","_jsxDEV","baseurl","CvsPonEY","_s","countryList","setCountryList","country","setCountry","handlechange","selcountry","value","fetch","then","response","json","data","i","length","push","id","label","catch","error","console","log","chartdata","setChartData","labels","Map","has","endYear","cnt","get","set","cmt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","option","_c","$RefreshReg$"],"sources":["E:/MJR/visualise/src/CvsPonEY.js"],"sourcesContent":["import './Dashboard.css';\r\nimport { useState, useMemo, useEffect} from 'react';\r\n\r\n\r\n\r\nconst baseurl = \"http://localhost:9000/api/data\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function CvsPonEY()\r\n{\r\n    const[countryList, setCountryList] = useState([]);\r\n    const[country, setCountry] = useState('Australia');\r\n\r\n    const handlechange = (selcountry) =>{\r\n        setCountry(selcountry.value);\r\n    }\r\n \r\n\r\n    useMemo(()=>{fetch(baseurl+'/countrynames')\r\n    .then(\r\n        (response)=> response.json()\r\n    )\r\n    .then(\r\n        (json) => {\r\n\r\n            var data = []\r\n          \r\n            for(let i = 0; i < json.length; i++)\r\n            {\r\n                data.push({id: i,value:json[i], label:json[i]});\r\n                   \r\n            } \r\n            setCountryList(data);\r\n            \r\n            // console.log(countryList);\r\n        }\r\n    )\r\n    .catch(\r\n        (error)=>{console.log(\"err\")}\r\n    );},[]);\r\n \r\n\r\n    const[chartdata , setChartData] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        fetch(`${baseurl}/country/${country}`)\r\n        .then((response)=> response.json()\r\n        ).then((json)=>{\r\n                let labels = [];\r\n                let data = new Map();\r\n                for(let i = 0 ; i < json.length ; i++)\r\n                {\r\n                    if(data.has(json[i].endYear))\r\n                    {\r\n                        let cnt = data.get(json[i].endYear) + 1;\r\n                        data.set(json[i].endYear, cnt);\r\n                    }\r\n                    data.set(json[i].endYear,cmt);\r\n                    \r\n                }\r\n                console.log(json);\r\n        })\r\n        .catch((error)=>{console.log(error)});\r\n    });\r\n    \r\n\r\n    // const chartdata = {\r\n    //     labels: ['Red', 'Orange', 'Blue'],\r\n    //     datasets: [\r\n    //         {\r\n    //           label: 'Popularity of colours',\r\n    //           data: [55, 23, 96],\r\n    //           backgroundColor: [\r\n    //             '#ff00ff',\r\n    //             '#ff0000',\r\n    //             '#0000ff'\r\n    //             ],\r\n    //             borderWidth: 1,\r\n    //                 }\r\n    //             ]\r\n    //     };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chart1\">\r\n              <span className='filter'>Country : </span> { countryList && <select className='select-box' value={country} onChange={handlechange}>{countryList.map((option) => (<option value={option.value}>{option.label}</option>))}</select>}\r\n                {/* <Barchart chatData= {chartdata} title=\"Country vs Published\" desc=\"Country vs Publised\"/> */}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}