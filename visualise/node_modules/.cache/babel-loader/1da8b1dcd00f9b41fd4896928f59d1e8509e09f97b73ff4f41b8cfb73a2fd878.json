{"ast":null,"code":"var _jsxFileName = \"E:\\\\MJR\\\\visualise\\\\src\\\\CvsPonEY.js\",\n  _s = $RefreshSig$();\nimport './Dashboard.css';\nimport { useState, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = \"http://localhost:9000/api/data\";\nfunction selectData(countryList) {\n  var text = \"\";\n  for (let country in countryList) {\n    text += `<option value='${country}'>${country}</option>`;\n  }\n  return text;\n}\nexport default function CvsPonEY() {\n  _s();\n  var countryList = [];\n  useMemo(() => {\n    fetch(baseurl + '/countrynames').then(response => response.json()).then(json => {\n      countryList = json;\n      // console.log(countryList);\n    }).catch(error => {\n      console.log(\"err\");\n    });\n  }, []);\n\n  // const[chartdata , setChartData] = useState(null);\n  // const[country, setcountry] = useState('Australia');\n  // useEffect(()=>{\n  //     axios.get(`${baseurl}/country/${country}`)\n  //     .then((response)=>{\n  //         setChartData(response.data);\n  //     })\n  //     .catch((error)=>{console.log(error)});\n  // });\n\n  // const chartdata = {\n  //     labels: ['Red', 'Orange', 'Blue'],\n  //     datasets: [\n  //         {\n  //           label: 'Popularity of colours',\n  //           data: [55, 23, 96],\n  //           backgroundColor: [\n  //             '#ff00ff',\n  //             '#ff0000',\n  //             '#0000ff'\n  //             ],\n  //             borderWidth: 1,\n  //                 }\n  //             ]\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart1\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"countrySel\",\n        className: \"select-box\",\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Australia\",\n          children: \"Australia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(CvsPonEY, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = CvsPonEY;\nvar _c;\n$RefreshReg$(_c, \"CvsPonEY\");","map":{"version":3,"names":["useState","useMemo","useRef","jsxDEV","_jsxDEV","baseurl","selectData","countryList","text","country","CvsPonEY","_s","fetch","then","response","json","catch","error","console","log","className","children","name","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MJR/visualise/src/CvsPonEY.js"],"sourcesContent":["import './Dashboard.css';\r\nimport { useState, useMemo, useRef} from 'react';\r\nconst baseurl = \"http://localhost:9000/api/data\";\r\n\r\n\r\n\r\nfunction selectData(countryList)\r\n{\r\n    var text = \"\"\r\n    for(let country in countryList)\r\n    {\r\n        text += `<option value='${country}'>${country}</option>`;\r\n    }\r\n        return text;\r\n}\r\n\r\n\r\nexport default function CvsPonEY()\r\n{\r\n    var countryList  = [];\r\n\r\n    useMemo(()=>{fetch(baseurl+'/countrynames')\r\n    .then(\r\n        (response)=> response.json()\r\n    )\r\n    .then(\r\n        (json) => {\r\n            countryList=json;\r\n            // console.log(countryList);\r\n        }\r\n    )\r\n    .catch(\r\n        (error)=>{console.log(\"err\")}\r\n    );},[]);\r\n \r\n\r\n    // const[chartdata , setChartData] = useState(null);\r\n    // const[country, setcountry] = useState('Australia');\r\n    // useEffect(()=>{\r\n    //     axios.get(`${baseurl}/country/${country}`)\r\n    //     .then((response)=>{\r\n    //         setChartData(response.data);\r\n    //     })\r\n    //     .catch((error)=>{console.log(error)});\r\n    // });\r\n    \r\n\r\n    // const chartdata = {\r\n    //     labels: ['Red', 'Orange', 'Blue'],\r\n    //     datasets: [\r\n    //         {\r\n    //           label: 'Popularity of colours',\r\n    //           data: [55, 23, 96],\r\n    //           backgroundColor: [\r\n    //             '#ff00ff',\r\n    //             '#ff0000',\r\n    //             '#0000ff'\r\n    //             ],\r\n    //             borderWidth: 1,\r\n    //                 }\r\n    //             ]\r\n    //     };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chart1\">\r\n              <form>\r\n              <select name=\"countrySel\" className='select-box'>\r\n                <option value=\"Australia\">Australia</option>\r\n                </select>\r\n                </form>\r\n            {/* <Barchart chatData= {chartdata} title=\"Country vs Published\" desc=\"Country vs Publised\"/> */}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,SAASA,QAAQ,EAAEC,OAAO,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,OAAO,GAAG,gCAAgC;AAIhD,SAASC,UAAUA,CAACC,WAAW,EAC/B;EACI,IAAIC,IAAI,GAAG,EAAE;EACb,KAAI,IAAIC,OAAO,IAAIF,WAAW,EAC9B;IACIC,IAAI,IAAK,kBAAiBC,OAAQ,KAAIA,OAAQ,WAAU;EAC5D;EACI,OAAOD,IAAI;AACnB;AAGA,eAAe,SAASE,QAAQA,CAAA,EAChC;EAAAC,EAAA;EACI,IAAIJ,WAAW,GAAI,EAAE;EAErBN,OAAO,CAAC,MAAI;IAACW,KAAK,CAACP,OAAO,GAAC,eAAe,CAAC,CAC1CQ,IAAI,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/B,CAAC,CACAF,IAAI,CACAE,IAAI,IAAK;MACNR,WAAW,GAACQ,IAAI;MAChB;IACJ,CACJ,CAAC,CACAC,KAAK,CACDC,KAAK,IAAG;MAACC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAAA,CAChC,CAAC;EAAC,CAAC,EAAC,EAAE,CAAC;;EAGP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA,oBACIf,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACjBjB,OAAA;MAAAiB,QAAA,eACAjB,OAAA;QAAQkB,IAAI,EAAC,YAAY;QAACF,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC9CjB,OAAA;UAAQmB,KAAK,EAAC,WAAW;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEd;AAAChB,EAAA,CA3DuBD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}