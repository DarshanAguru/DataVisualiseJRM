{"ast":null,"code":"var _jsxFileName = \"E:\\\\MJR\\\\visualise\\\\src\\\\EYvsP.js\",\n  _s = $RefreshSig$();\nimport './Dashboard.css';\nimport { useState, useMemo, useEffect } from 'react';\nimport BarChart from './BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = \"http://localhost:9000/api/data\";\nexport default function EYvsP() {\n  _s();\n  const [endYearList, setEndyearList] = useState([]);\n  const [endyear, setEndyear] = useState(2018);\n  const handlechange = selEy => {\n    setEndyear(selEy.target.value);\n    // console.log(selcountry.target.value);\n  };\n  useMemo(() => {\n    fetch(baseurl + '/endyearlist').then(response => response.json()).then(json => {\n      var data = [];\n      for (let i = 0; i < json.length; i++) {\n        data.push({\n          id: i,\n          value: json[i],\n          label: json[i]\n        });\n      }\n      setEndyearList(data);\n\n      // console.log(countryList);\n    }).catch(error => {\n      console.log(\"err\");\n    });\n  }, []);\n  const [chartdata, setChartData] = useState({\n    label: ['a', 'b', 'c', 'd'],\n    datasets: [{\n      title: \"Barchart\",\n      data: [1, 2, 3, 4],\n      backgroundColor: ['#ff0000'],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    fetch(`${baseurl}/endyear/${endyear}`).then(response => response.json()).then(json => {\n      let dataset = new Map();\n      for (let i = 0; i < json.length; i++) {\n        if (json[i].pestle !== \"Nan\") {\n          if (dataset.has(json[i].pestle)) {\n            let cnt = dataset.get(json[i].pestle) + 1;\n            dataset.set(json[i].pestle, cnt);\n          } else {\n            dataset.set(json[i].pestle, 1);\n          }\n        }\n      }\n      let labels = [];\n      let values = [];\n      dataset.forEach((k, v) => {\n        labels.push(v);\n        values.push(k);\n      });\n      console.log(labels);\n      var chartdata = {\n        labels: labels,\n        datasets: [{\n          label: \"No. of Published articles\",\n          data: values,\n          backgroundColor: ['#FF920E'],\n          borderWidth: 1\n        }]\n      };\n      setChartData(chartdata);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [endyear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart1\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"filter\",\n      children: \"End Year : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-box\",\n      value: endyear,\n      onChange: handlechange,\n      children: endYearList.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 117\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      chartData: chartdata,\n      title: \"Atricles Published on Pestles on selected year\",\n      desc: \"Endyear vs Pestle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(EYvsP, \"dSHBYuadOgrR/1TdM18NgXKUuXc=\");\n_c = EYvsP;\nvar _c;\n$RefreshReg$(_c, \"EYvsP\");","map":{"version":3,"names":["useState","useMemo","useEffect","BarChart","jsxDEV","_jsxDEV","baseurl","EYvsP","_s","endYearList","setEndyearList","endyear","setEndyear","handlechange","selEy","target","value","fetch","then","response","json","data","i","length","push","id","label","catch","error","console","log","chartdata","setChartData","datasets","title","backgroundColor","borderWidth","dataset","Map","pestle","has","cnt","get","set","labels","values","forEach","k","v","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","option","chartData","desc","_c","$RefreshReg$"],"sources":["E:/MJR/visualise/src/EYvsP.js"],"sourcesContent":["import './Dashboard.css';\r\nimport { useState, useMemo, useEffect} from 'react';\r\nimport BarChart from './BarChart';\r\n\r\n\r\nconst baseurl = \"http://localhost:9000/api/data\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function EYvsP()\r\n{\r\n    const[endYearList, setEndyearList] = useState([]);\r\n    const[endyear, setEndyear] = useState(2018);\r\n\r\n    const handlechange = (selEy) =>{\r\n        setEndyear(selEy.target.value);\r\n        // console.log(selcountry.target.value);\r\n    }\r\n \r\n\r\n    useMemo(()=>{fetch(baseurl+'/endyearlist')\r\n    .then(\r\n        (response)=> response.json()\r\n    )\r\n    .then(\r\n        (json) => {\r\n\r\n            var data = []\r\n          \r\n            for(let i = 0; i < json.length; i++)\r\n            {\r\n                data.push({id: i,value:json[i], label:json[i]});\r\n                   \r\n            } \r\n            setEndyearList(data);\r\n            \r\n            // console.log(countryList);\r\n        }\r\n    )\r\n    .catch(\r\n        (error)=>{console.log(\"err\")}\r\n    );},[]);\r\n \r\n\r\n    const[chartdata , setChartData] = useState({\r\n        label : ['a','b','c','d'],\r\n        datasets: [\r\n            {\r\n                title :\"Barchart\",\r\n                data :  [1,2,3,4],\r\n                backgroundColor : ['#ff0000'],\r\n                borderWidth: 1,\r\n            }\r\n        ]\r\n        });\r\n    \r\n    useEffect(()=>{\r\n        fetch(`${baseurl}/endyear/${endyear}`)\r\n        .then((response)=> response.json()\r\n        ).then((json)=>{\r\n                \r\n                let dataset = new Map();\r\n                for(let i = 0 ; i < json.length ; i++)\r\n                {\r\n                    if(json[i].pestle !== \"Nan\")\r\n                    {\r\n                    if(dataset.has(json[i].pestle))\r\n                    {\r\n                        let cnt = dataset.get(json[i].pestle) + 1;\r\n                        dataset.set(json[i].pestle, cnt);\r\n                    }\r\n                    else{\r\n                        dataset.set(json[i].pestle,1);\r\n                    }\r\n                    }\r\n                }\r\n\r\n                let labels = [];\r\n                let values = [];\r\n                \r\n                dataset.forEach((k,v)=>{\r\n                    labels.push(v);\r\n                    values.push(k);\r\n                });\r\n                console.log(labels);\r\n                var chartdata = {\r\n                    labels : labels,\r\n                    datasets: [\r\n                        {\r\n                            label :\"No. of Published articles\",\r\n                            data :  values,\r\n                            backgroundColor : ['#FF920E'],\r\n                            borderWidth: 1,\r\n                        }\r\n                    ]\r\n                    };\r\n                \r\n                    setChartData(chartdata);\r\n                \r\n        \r\n        })\r\n        .catch((error)=>{console.log(error)});\r\n    },[endyear]);\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chart1\">\r\n              <span className='filter'>End Year : </span> \r\n              <select className='select-box' value={endyear}  onChange={handlechange}>{endYearList.map((option) => (<option value={option.value}>{option.label}</option>))}</select>\r\n                <BarChart chartData= {chartdata} title=\"Atricles Published on Pestles on selected year\" desc=\"Endyear vs Pestle\"/>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}