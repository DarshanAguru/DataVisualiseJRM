{"ast":null,"code":"var _jsxFileName = \"E:\\\\MJR\\\\visualise\\\\src\\\\CvsPonEY.js\",\n  _s = $RefreshSig$();\nimport './Dashboard.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = \"http://localhost:9000/api/data\";\nconst myInit = {\n  method: 'HEAD',\n  mode: 'no-cors'\n};\nconst myRequest = new Request(testURL, myInit);\nfunction selectData(countryList) {\n  var text = \"\";\n  for (let country in countryList) {\n    text += `<option value ${country}>${country}</option>\\n`;\n  }\n  return text;\n}\nexport default function CvsPonEY() {\n  _s();\n  var countryList = [];\n  useEffect(() => {\n    axios.get(`${baseurl}/countrynames`).then(response => {\n      countryList.fill(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n\n  // const[chartdata , setChartData] = useState(null);\n  // const[country, setcountry] = useState('Australia');\n  // useEffect(()=>{\n  //     axios.get(`${baseurl}/country/${country}`)\n  //     .then((response)=>{\n  //         setChartData(response.data);\n  //     })\n  //     .catch((error)=>{console.log(error)});\n  // });\n\n  // const chartdata = {\n  //     labels: ['Red', 'Orange', 'Blue'],\n  //     datasets: [\n  //         {\n  //           label: 'Popularity of colours',\n  //           data: [55, 23, 96],\n  //           backgroundColor: [\n  //             '#ff00ff',\n  //             '#ff0000',\n  //             '#0000ff'\n  //             ],\n  //             borderWidth: 1,\n  //                 }\n  //             ]\n  //     };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart1\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-box\",\n      children: countryList && selectData(countryList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(CvsPonEY, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CvsPonEY;\nvar _c;\n$RefreshReg$(_c, \"CvsPonEY\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","baseurl","myInit","method","mode","myRequest","Request","testURL","selectData","countryList","text","country","CvsPonEY","_s","get","then","response","fill","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MJR/visualise/src/CvsPonEY.js"],"sourcesContent":["import './Dashboard.css';\r\n\r\nimport axios from 'axios';\r\nimport { useState, useEffect} from 'react';\r\nconst baseurl = \"http://localhost:9000/api/data\";\r\n\tconst myInit = {\r\n\t\tmethod: 'HEAD',\r\n\t\tmode: 'no-cors',\r\n\t};\r\n\r\nconst myRequest = new Request(testURL, myInit);\r\nfunction selectData(countryList)\r\n{\r\n    var text = \"\"\r\n    for(let country in countryList)\r\n    {\r\n        text += `<option value ${country}>${country}</option>\\n`;\r\n    }\r\n        return text;\r\n}\r\n\r\n\r\nexport default function CvsPonEY()\r\n{\r\n\r\n    var countryList = [];\r\n    useEffect(()=>\r\n    {\r\n        axios.get(`${baseurl}/countrynames`)\r\n        .then(\r\n            (response)=>{\r\n                countryList.fill(response.data);\r\n            }\r\n        )\r\n        .catch(\r\n            (error)=>{console.log(error)}\r\n        );\r\n    });\r\n\r\n    // const[chartdata , setChartData] = useState(null);\r\n    // const[country, setcountry] = useState('Australia');\r\n    // useEffect(()=>{\r\n    //     axios.get(`${baseurl}/country/${country}`)\r\n    //     .then((response)=>{\r\n    //         setChartData(response.data);\r\n    //     })\r\n    //     .catch((error)=>{console.log(error)});\r\n    // });\r\n    \r\n\r\n    // const chartdata = {\r\n    //     labels: ['Red', 'Orange', 'Blue'],\r\n    //     datasets: [\r\n    //         {\r\n    //           label: 'Popularity of colours',\r\n    //           data: [55, 23, 96],\r\n    //           backgroundColor: [\r\n    //             '#ff00ff',\r\n    //             '#ff0000',\r\n    //             '#0000ff'\r\n    //             ],\r\n    //             borderWidth: 1,\r\n    //                 }\r\n    //             ]\r\n    //     };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chart1\">\r\n              <select className='select-box'>{countryList && selectData(countryList)}</select>\r\n            {/* <Barchart chatData= {chartdata} title=\"Country vs Published\" desc=\"Country vs Publised\"/> */}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAO,iBAAiB;AAExB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,OAAO,GAAG,gCAAgC;AAC/C,MAAMC,MAAM,GAAG;EACdC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACP,CAAC;AAEF,MAAMC,SAAS,GAAG,IAAIC,OAAO,CAACC,OAAO,EAAEL,MAAM,CAAC;AAC9C,SAASM,UAAUA,CAACC,WAAW,EAC/B;EACI,IAAIC,IAAI,GAAG,EAAE;EACb,KAAI,IAAIC,OAAO,IAAIF,WAAW,EAC9B;IACIC,IAAI,IAAK,iBAAgBC,OAAQ,IAAGA,OAAQ,aAAY;EAC5D;EACI,OAAOD,IAAI;AACnB;AAGA,eAAe,SAASE,QAAQA,CAAA,EAChC;EAAAC,EAAA;EAEI,IAAIJ,WAAW,GAAG,EAAE;EACpBX,SAAS,CAAC,MACV;IACIF,KAAK,CAACkB,GAAG,CAAE,GAAEb,OAAQ,eAAc,CAAC,CACnCc,IAAI,CACAC,QAAQ,IAAG;MACRP,WAAW,CAACQ,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC;IACnC,CACJ,CAAC,CACAC,KAAK,CACDC,KAAK,IAAG;MAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAAA,CAChC,CAAC;EACL,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA,oBACIpB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACjBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEf,WAAW,IAAID,UAAU,CAACC,WAAW;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjF,CAAC;AAEd;AAACf,EAAA,CArDuBD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}